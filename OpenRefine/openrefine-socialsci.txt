OpenRefine
- Based on Library Carpentry OR lesson

Used to be GoogleRefine, now maintained by team of independent OSS developers. Stable version is still called Google Refine, beta since 2013, relatively stable.

Interface in browser (http://127.0.0.1:3333) but RUNNING LOCALLY - data NOT IN THE CLOUD.
There is also a (paid) cloud service based on OpenRefine: http://refinepro.com/

Pros re spreadsheets:
- handles larger files (100'000 rows OK, does not scale to several millions, but there are ways to make it work with larger files, memory allocation etc.)
- supports variety of input/output formats (csv, tsv, excel, odt, json, xml, custom text...)
- powerful filters, search & replace (regular expressions, etc.)
- predictive algorithms for clustering
- facets approach - a bit like discovery layers
- full undo/redo history
	- mistakes are OK
	- set of operations can be applied to other files
	- you can easily "travel back" to an earlier version of your data
	- steps can be exported and shared, important for reproducible research
- easy APIs integration
- open infrastructure, custom functions can be developed


Cons:
- less intuitive to install & run
- non transparent saved files - save results to a new file - this does not modify raw/source files, another bonus
- not much documentation
- development activity?
- buggy and finicky, poor error reporting


Reasons to use OpenRefine:
- EXPLORE data
	- e.g. how are values distributed
	- think of facets in library search tool
- NORMALIZE/CLEAN UP data
	- inconsistent date formats
	- typos, case mismatch, markup errors, e.g. London, london, London;, LONDOND, etc.
	- Split unstructured data into structured, see online example
	- Enrich data from an external source, e.g. Virtual International Authority File


CONTENTS
- Creating a project & importing data
- Exploring data through filtering and faceting
- Cleaning up data: split, merge, cluster, remove whitespaces, etc.
- Use GREL to perform more complex operations
- Save and reuse workflows
- Exporting data
- Reconciliation and APIs






1. HOW TO INSTALL AND RUN

Download from openrefine.org
	- Open Refine 2.8 STABLE
	- Open Refine 3.0 BETA
Requires JAVA.

Should open browser window when launched. If not, navigate to http://127.0.0.1:3333
Internet Explorer is not supported. Use Chrome or Firefox.


2. IMPORT DATA & CREATE PROJECT

Download sample file from http://bit.ly/socsciORsample
OR
Use "Web Addresses (URL)" functionality - http:// has to be specified

Upload into Open Refine
	- check headers
	- remove rows if needed
	- check encoding

Very fast. Displays only the first rows, can be changed. This makes it faster.

Reorder columns, hide, etc.

Please uncheck "Parse cell text into numbers, dates etc."
UTF-8 encoding
Name your project
Once you're finished, create project.


This sample data comes from interviews of farmers in two countries in eastern sub-Saharan Africa (Mozambique and Tanzania).



3. EXPLORE DATA: SORT, FILTER, FACETS, CLUSTER
See how data is displayed. Similar to spreadsheet.
Not all rows (or records) are displayed -> preview, faster. Adjustable

RE-ORDER
All->Edit columns->Reorder or Remove
Drag and drop

SORT
Choose a column, sort
See new drop down menu
- Similar to Excel "filter sort" -> temporary (unlike general Excel sort)
- Can be made permanent - see the little Sort drop down on top


FACETS
Facets are one of most used features. With facets you can apply filters to your data quickly.
Great for exploring data, but also for cleanup.

Ex. Village -> Text Facet
- we see data is messy
- we could already start cleaning it up now - hover and edit
	- Do it for Chirdozo

-------------------------------------------------
ACTIVITY:
- Create a facet on the interview_date column
- If you look closely at the available facet, you can see a timeline option
- What happens if you try to create a timeline facet with the dates?
-------------------------------------------------

Date stored as text
Use Edit > Common Transforms > To Date
Then try again


FILTERS
Facets will do exact matches by default. Can also use Filters to look for particular pattern in a column.

Ex. items_owned -> Text Filter "motor"

Supports regular expressions!

-> remember, only displays first results, check # of matching results

IMPORTANT
When filters are applied, operations only perform on matching rows.


Other types of facets, e.g.
- Numeric
- Timeline
- Customized 
	- Word facet - this breaks down text into words and counts the number of records each word appears in
	- Text length facet
		Can be used to check data






4. CLEANING UP DATA


CLUSTERING
We've seen in our Village facet that there are some errors. We can manually edit here, but what if we have a very long list of villages?

Instead, let's try clicking the cluster button on the facet
Or
Village -> Edit cells -> Cluster and edit

Play with the clustering options, key collision and metaphone3 works well here.

Click Merge checkboxes and Merge and Recluster

Finish cleaning up by hand - Chirdozo and Ruaca with Ruaca-N..



ADVANCED:
- Check out https://github.com/OpenRefine/OpenRefine/wiki/Clustering-In-Depth for more on the clustering methods used
	(can be accessed through the more info link)




TRANSFORMS


Let's look at the items_owned column now. I'd like to do some exploring on how many people own a car, a computer, etc.
I could do it using filters as earlier.

But I could also do a more advanced type of facet. Let's try.

Facet -> Custom Text Facet

This allows you to do more complex operations using a language called GREL

try value.split(";")

This is a little like the functions in Excel. See reference handout, or the Help tab.


Let's have a look at our facets. What's the problem? Looks like we first need to remove some characters

Edit Cells -> Transforms
Same language

try value.replace("[","")

-------------------------------------------------
ACTIVITY:
- Try removing the ]
- Try removing the '
- Try removing extra spaces
-------------------------------------------------


Now we can start exploring our data. We can see how many people own a car for example.
If we click on car, we only display those entries.
Looking at the village facet, we can also see that all people owning cars are in one village, try computer too.

-------------------------------------------------
ACTIVITY:
- Try to find out what is the most commonly held object?
-------------------------------------------------

Sort by count


-------------------------------------------------
ACTIVITY:
- Perform the same clean up steps and customized text faceting for the months_lack_food column.
- Which month(s) were farmers more likely to lack food?
-------------------------------------------------

-------------------------------------------------
ACTIVITY:
- Continue cleaning months_no_water, liv_owned, res_change, and no_food_mitigation columns
-------------------------------------------------


A few tricks
- History tab in transforms
- Operators can be combined
	value.replace("[","").replace("]","").replace("'","").replace(" ","")
	and then reused



Common Transforms

Let's try a text facet on respondent_wall_type

What's happening?
Extra spaces

We can clean them up in the facet
We can use value.replace

But because this is common tranform: Edit -> Common Transforms -> Trip leading and trailing whitespace





	

5. SAVE AND REUSE WORKFLOWS

Undo/Redo
	- You can come back to previous stages
	- The next changes will remain greyed out and you can re-apply them
	- However if you select an earlier stage and then do other transforms, you loose the ones you undid
	- Undo history is automatically saved, and remains available if you quit and reopen

If you want a set of steps to be re-applied later, or used in another project, there's a way to do it.

Click the Extract button
- The operations we did are coded in a format called JSON
- Try selecting and deselecting steps, will update the JSON
- If you want to reuse it, copy-paste it somewhere else
- To apply a set of steps from another project, use the Apply function
	Column names must match!!

--> single cell operations are not exported






6. EXPORTING DATA

Don't forget, your data is not stored in the cloud. Even though OR lives in a browser, all data is local.
Also it's not stored in a very user-friendly way/place. Best to export it once you're done working with it.

Export menu
	- Different formats

-------------------------------------------------
ACTIVITY:
- Try out different export options
- Check out Custom Tabular Exporter
	- several options
	- download locally
	- upload to Google Spreadsheet or Google Fusion table
ADVANCED:
- Check out Templating
	Example case, to write out GeoJSON
	can also be used to export e.g. HTML table or Markdown, or Wikipedia format, etc.
-------------------------------------------------





7. RECONCILIATION AND APIs

How can we enrich our data? 

Can we retrieve data from URLs?

First, let's filter a manageable part of the data
ISSN column. Star one line + Facet by star. To select a single line. Faster.

Steps: on the ISSN column
1. Edit column -> Add column by fetching URL
2. GREL expression to build URL

	Expression: "http://api.crossref.org/journals/"+ escape(value,'url')
	Check delay to not overwhelm server
	Check display error instead of null
	
	NEW this now requires a user and password - apparently you need to have a Crossref subscription :(
	
	Try instead 
	"http://www.journaltocs.ac.uk/api/journals/"+value.escape('url')+"?user=tom@timtom.ch"
	Generates XML instead of JSON
	

To parse JSON
Add another column

	value.parseJson().message.title
	   ^-- keep existing JSON response
	   
To parse XML

    value.parseHtml().select('item title')[0].htmlText()

Also possible to Edit cells with Transform





8. RECONCILIATION

What is reconciliation:
Christina Harlow: Compare values in my dataset with values in an external dataset, if deemed a match, link and pull in external datapoint information

Reconciliation functions
Even easier, people have implemented database interfaces that interact directly with OpenRefine.
Of interest to librarians:
- VIAF
- LCSH
- JournalTOCs
- FundRef (e.g. to link publications to funding source)
- FAST (Faceted Application of Subject Terminology)

Add standard service: http://iphylo.org/~rpage/phyloinformatics/services/reconciliation_viaf.php




Example:
In the Publisher column, choose Reconcile->Start Reconciling

Add standard service http://refine.codefork.com/reconcile/viaf
	(if you plan to use this a lot, install your own instance instead)
	
	-> recongizes type of "entities"
	
	Pre-analyzes the dataset and selects type of data, this is why it displays "Corporate Name" in first column.
	Try it on the Authors column too
	
	Can add additional columns to help narrow down search - leave blank for now
	
	Uncheck Auto-match (for now, we want to demonstrate how this works)

	Create Text Facet on Publisher's column to demonstrate
		Show International Union of Crystallography
		MDPI



Mention Extensions
	See http://openrefine.org/download.html
	e.g. RDF extension for exporting in RDF
	
Cross function
	The ‘cross’ function takes a value from the OpenRefine project you are working on, 
	and looks for that value in a column in another OpenRefine project. 
	If it finds one or more matching rows in the second OpenRefine project, 
	it returns an array containing the rows that it has matched.




Google Fusion example - ONLY WITH DATASET WiTH LOCATION
- First filter by year to limit number of lines, e.g. 1852
- Custom Tabular Exporter, limit columns but be sure to include place of publication
- Upload to Google Fusion table
- Go to https://drive.google.com/drive/recent open created table
- Change Place of Publication type from text to location
- Add map tab


Resources:
- https://data-lessons.github.io/library-openrefine/
- http://arcadiafalcone.net/GoogleRefineCheatSheets.pdf
- http://www.meanboyfriend.com/overdue_ideas/2014/11/working-with-data-using-openrefine/
- NCompass Live, Using MarcEdit & Open Refine: http://nlc.nebraska.gov/scripts/calendar/eventshow.asp?ProgID=14290
- http://enipedia.tudelft.nl/wiki/OpenRefine_Tutorial
- GoogleRefine tutorials (YouTube)
- OpenRefine book
- https://github.com/OpenRefine/OpenRefine/wiki/Reconcilable-Data-Sources#librarians
- http://www.datacarpentry.org/OpenRefine-ecology-lesson/00-getting-started.html
- https://github.com/LODLAM/LODLAMTO16/tree/master/OpenRefine_Tutorial using the RDF extension. This tutorial requires some advanced knowledge of RDF/LOD. Also LODRefine and the RDF extension are no longer supported, very finicky re: Java version, etc. Not sure this is a good example for begninners.

Install help & troubleshooting:
- https://groups.google.com/forum/#!forum/openrefine
- https://summit.uwaterloo.ca/p389l6kkluv/ (webinar)